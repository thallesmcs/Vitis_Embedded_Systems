

================================================================
== Synthesis Summary Report of 'array_summer'
================================================================
+ General Information: 
    * Date:           Wed Jul 16 11:23:24 2025
    * Version:        2025.1 (Build 6135595 on May 21 2025)
    * Project:        soma_arrays_in_memory
    * Solution:       hls (Vivado IP Flow Target)
    * Product family: spartan7
    * Target device:  xc7s50-csga324-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +----------------+------+------+---------+-----+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |     Modules    | Issue|      |    Latency    | Iteration|         | Trip |          |        |    |           |           |     |
    |     & Loops    | Type | Slack| (cycles)| (ns)|  Latency | Interval| Count| Pipelined|  BRAM  | DSP|     FF    |    LUT    | URAM|
    +----------------+------+------+---------+-----+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |+ array_summer  |     -|  0.00|        -|    -|         -|        0|     -|    rewind|  2 (1%)|   -|  1140 (1%)|  1261 (3%)|    -|
    | o SUM_LOOP     |     -|  7.30|        -|    -|        11|        1|     -|       yes|       -|   -|          -|          -|    -|
    +----------------+------+------+---------+-----+----------+---------+------+----------+--------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface   | Read/Write | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|             |            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem0 | READ_ONLY  | 32 -> 32   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          | BRAM=2            |
+-------------+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+-----------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface     | Register        | Offset | Width | Access | Description                      | Bit Fields                                                           |
+---------------+-----------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_control | CTRL            | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_control | GIER            | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_control | IP_IER          | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_control | IP_ISR          | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_control | input_array_1   | 0x10   | 32    | W      | Data signal of input_array       |                                                                      |
| s_axi_control | input_array_2   | 0x14   | 32    | W      | Data signal of input_array       |                                                                      |
| s_axi_control | size            | 0x20   | 32    | W      | Data signal of size              |                                                                      |
| s_axi_control | sum_result      | 0x28   | 32    | R      | Data signal of sum_result        |                                                                      |
| s_axi_control | sum_result_ctrl | 0x2c   | 32    | R      | Control signal of sum_result     | 0=sum_result_ap_vld                                                  |
+---------------+-----------------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+-------------+-----------+----------+
| Argument    | Direction | Datatype |
+-------------+-----------+----------+
| input_array | in        | int*     |
| sum_result  | out       | int*     |
| size        | in        | int      |
+-------------+-----------+----------+

* SW-to-HW Mapping
+-------------+---------------+-----------+----------+-------------------------------------------+
| Argument    | HW Interface  | HW Type   | HW Usage | HW Info                                   |
+-------------+---------------+-----------+----------+-------------------------------------------+
| input_array | m_axi_gmem0   | interface |          | channel=0                                 |
| input_array | s_axi_control | register  | offset   | name=input_array_1 offset=0x10 range=32   |
| input_array | s_axi_control | register  | offset   | name=input_array_2 offset=0x14 range=32   |
| sum_result  | s_axi_control | register  |          | name=sum_result offset=0x28 range=32      |
| sum_result  | s_axi_control | register  |          | name=sum_result_ctrl offset=0x2c range=32 |
| size        | s_axi_control | register  |          | name=size offset=0x20 range=32            |
+-------------+---------------+-----------+----------+-------------------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+----------+-------+----------+------------------------+
| HW Interface | Direction | Length   | Width | Loop     | Loop Location          |
+--------------+-----------+----------+-------+----------+------------------------+
| m_axi_gmem0  | read      | variable | 32    | SUM_LOOP | array_summer.cpp:15:15 |
+--------------+-----------+----------+-------+----------+------------------------+

* All M_AXI Variable Accesses
+--------------+-------------+------------------------+-----------+--------------+----------+----------+------------------------+------------+-------------------------------------------------------------------------------------------------------+
| HW Interface | Variable    | Access Location        | Direction | Burst Status | Length   | Loop     | Loop Location          | Resolution | Problem                                                                                               |
+--------------+-------------+------------------------+-----------+--------------+----------+----------+------------------------+------------+-------------------------------------------------------------------------------------------------------+
| m_axi_gmem0  | input_array | array_summer.cpp:17:17 | read      | Widen Fail   |          | SUM_LOOP | array_summer.cpp:15:15 | 214-353    | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem0  | input_array | array_summer.cpp:17:17 | read      | Inferred     | variable | SUM_LOOP | array_summer.cpp:15:15 |            |                                                                                                       |
+--------------+-------------+------------------------+-----------+--------------+----------+----------+------------------------+------------+-------------------------------------------------------------------------------------------------------+

    * Resolution URL: docs.xilinx.com/access/sources/dita/topic?Doc_Version=2025.1%20English&url=ug1448-hls-guidance&resourceid=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+---------------------------+-----+--------+---------------+--------+----------+---------+
| Name                      | DSP | Pragma | Variable      | Op     | Impl     | Latency |
+---------------------------+-----+--------+---------------+--------+----------+---------+
| + array_summer            | 0   |        |               |        |          |         |
|   icmp_ln15_fu_128_p2     |     |        | icmp_ln15     | setgt  | auto     | 0       |
|   empty_fu_138_p3         |     |        | empty         | select | auto_sel | 0       |
|   icmp_ln15_1_fu_167_p2   |     |        | icmp_ln15_1   | setlt  | auto     | 0       |
|   add_ln15_fu_173_p2      |     |        | add_ln15      | add    | fabric   | 0       |
|   accumulator_1_fu_207_p2 |     |        | accumulator_1 | add    | fabric   | 0       |
+---------------------------+-----+--------+---------------+--------+----------+---------+


================================================================
== Storage Report
================================================================
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| Name              | Usage     | Type      | BRAM | URAM | Pragma | Variable | Impl | Latency | Bitwidth, Depth, |
|                   |           |           |      |      |        |          |      |         | Banks            |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+
| + array_summer    |           |           | 2    | 0    |        |          |      |         |                  |
|   control_s_axi_U | interface | s_axilite |      |      |        |          |      |         |                  |
|   gmem0_m_axi_U   | interface | m_axi     | 2    |      |        |          |      |         |                  |
+-------------------+-----------+-----------+------+------+--------+----------+------+---------+------------------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+---------------------------------------------------------+-------------------------------------------------+
| Type      | Options                                                 | Location                                        |
+-----------+---------------------------------------------------------+-------------------------------------------------+
| INTERFACE | m_axi port=input_array offset=slave bundle=gmem0        | array_summer.cpp:6 in array_summer, input_array |
| INTERFACE | s_axilite port=input_array bundle=control offset = 0x10 | array_summer.cpp:7 in array_summer, input_array |
| INTERFACE | s_axilite port=sum_result bundle=control offset = 0x28  | array_summer.cpp:8 in array_summer, sum_result  |
| INTERFACE | s_axilite port=size bundle=control offset = 0x20        | array_summer.cpp:9 in array_summer, size        |
| INTERFACE | s_axilite port=return bundle=control offset = 0x00      | array_summer.cpp:10 in array_summer, return     |
| PIPELINE  |                                                         | array_summer.cpp:16 in array_summer             |
+-----------+---------------------------------------------------------+-------------------------------------------------+


